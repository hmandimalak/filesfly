// signin.tsx
import React, { useState } from 'react';
import { Button, Checkbox, Form, Input, message ,Typography} from "antd";
import { LockOutlined, UserOutlined,} from "@ant-design/icons";
import "./signin.css";
import { BrowserRouter as Router, Route, Link } from "react-router-dom";
import axios from 'axios';
import { useNavigate } from "react-router-dom";

interface FormValues {
  username: string;
  password: string;
  remember: boolean;
}

const onFinish = (values: FormValues) => {
  console.log("Success:", values);
}; 

const onFinishFailed = (errorInfo: any) => {
  console.log("Failed:", errorInfo);
};

const Signin: React.FC = () => {
  const [collapsed, setCollapsed] = useState(false); 

  const navigate = useNavigate();  // React Router's navigation hook

  const onFinish = async (values: FormValues) => {
    try {
      const response = await axios.post('http://localhost:8000/auth/token/', {
        username: values.username,
        password: values.password,
      });
      console.log();
      console.log("Token Generation Response:", response.data);  // Handle the response as needed

      // Redirect to another page after successful login
        // Store tokens in local storage
      localStorage.setItem('accessToken', response.data.access);
      localStorage.setItem('refreshToken', response.data.refresh);

      const userResponse = await axios.get('http://localhost:8000/auth/user/', {
        headers: {
          Authorization: `Bearer ${response.data.access}`,
        },
      });

      // Log user details
      console.log('User details:', userResponse.data);
      navigate('/mainpage');  // Update the URL as needed
    } catch (error) {
      console.error('Signin error:', error);
      message.error('Failed to sign in. Please check your credentials.');
    }
  };

  return (

    <div className="signin-container"style={{ height: '100vh', display: 'flex', justifyContent: 'center', alignItems: 'center',   background: 'rgb(2,0,36)',
  }}>
 <span style={{ fontWeight: 'bold', fontFamily: 'modern', color: 'white', textAlign: 'left', position: 'absolute', top: 20, left: 20, fontSize:'50px'}}>
        FilesFly
      </span>
      
      <div className="container" style={{ width: '80%', maxWidth: 600, padding: '20px', borderRadius: '8px', boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)', textAlign: "center",background:'white'}}>
        <div className="welcome-message">
          <p>Bienvenue a FilesFly,</p>
          vous n'avez pas de compte ? <Link to="/signup">Cr√©er un compte</Link>
        </div>

        <Form
          name="basic"
          initialValues={{ remember: true }}
          onFinish={onFinish}
          onFinishFailed={onFinishFailed}
          autoComplete="off"
          layout="vertical"
          className="form-signin"
          style={{ marginTop: '40px' }}
        >
          <Form.Item 
            name="username"
            rules={[
              { required: true, message: "Please input your username!" },
            ]}
          >
            <Input size='large'
              prefix={<UserOutlined className="site-form-item-icon" />}
              placeholder="Nom"
              style={{ width: "80%"}}
            />
          </Form.Item>

          <Form.Item
            name="password"
            rules={[
              { required: true, message: "Please input your password!" },
            ]}
          >
            <Input.Password size='large'
              prefix={<LockOutlined className="site-form-item-icon" />}
              placeholder="mot de passe"
              style={{ width: "80%"}}
            />
          </Form.Item>

          <Form.Item
            name="remember"
            valuePropName="checked"
          >
            <Checkbox>Souvenez de moi</Checkbox>
          </Form.Item>

          <Form.Item>
            <Button type="primary" htmlType="submit" size='large' style={{ width: "60%", margin: "0 auto", marginBottom:"13px" }}>
              Se conncter
            </Button>

            
          </Form.Item>
        </Form>
      </div>
    </div>
  );
};

export default Signin;